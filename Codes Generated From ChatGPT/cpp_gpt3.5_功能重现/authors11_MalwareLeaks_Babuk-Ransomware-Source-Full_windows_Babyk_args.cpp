#ifndef ARGS_H
#define ARGS_H

#include <iostream>
#include <string>
#include <vector>
#include <cwchar>

bool argz_option(int argc, wchar_t* argv[], const wchar_t* option);
wchar_t* argz_arg(int argc, wchar_t* argv[], int index);
wchar_t* argz_value(int argc, wchar_t* argv[], const wchar_t* key);

#endif

#include "args.h"

bool argz_option(int argc, wchar_t* argv[], const wchar_t* option) {
    for (int i = 0; i < argc; i++) {
        if (wcscmp(argv[i], option) == 0) {
            return true;
        }
    }
    return false;
}

wchar_t* argz_arg(int argc, wchar_t* argv[], int index) {
    if (index >= 0 && index < argc) {
        return argv[index];
    } else {
        return 0;
    }
}

wchar_t* argz_value(int argc, wchar_t* argv[], const wchar_t* key) {
    std::wstring keyStr(key);
    keyStr += L'=';

    for (int i = 0; i < argc; i++) {
        std::wstring argStr(argv[i]);

        if (argStr.substr(0, keyStr.size()) == keyStr) {
            return argv[i] + keyStr.size();
        }
    }
    return 0;
}

int wmain(int argc, wchar_t* argv[]) {
    if (argz_option(argc, argv, L"--help")) {
        std::wcout << L"Usage: program [options] arguments" << std::endl;
        return 0;
    }

    wchar_t* arg1 = argz_arg(argc, argv, 1);
    if (arg1) {
        std::wcout << L"Argument 1: " << arg1 << std::endl;
    } else {
        std::wcout << L"Argument 1 not found" << std::endl;
    }

    wchar_t* value1 = argz_value(argc, argv, L"--key");
    if (value1) {
        std::wcout << L"Value of --key: " << value1 << std::endl;
    } else {
        std::wcout << L"Key-value pair for --key not found" << std::endl;
    }

    return 0;
}
